# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# Builds ultralytics/ultralytics:latest-cpu image on DockerHub https://hub.docker.com/r/ultralytics/ultralytics
# Image is CPU-optimized for ONNX, OpenVINO and PyTorch YOLOv8 deployments

# Use the official Python 3.10 slim-bookworm as base image

#FROM python:3.10-slim-bookworm
#
## Downloads to user config dir
#ADD Arial.ttf Arial.Unicode.ttf /root/.config/Ultralytics/
#
## Install linux packages
## g++ required to build 'tflite_support' and 'lap' packages, libusb-1.0-0 required for 'tflite_support' package
#RUN apt update \
#    && apt install --no-install-recommends -y python3-pip git zip curl htop libgl1-mesa-glx libglib2.0-0 libpython3-dev gnupg g++ libusb-1.0-0
## RUN alias python=python3
#
## Create working directory
#WORKDIR /ultralytics
#
## Copy contents
## COPY . /usr/src/app  (issues as not a .git directory)
#RUN git clone https://github.com/ultralytics/ultralytics /ultralytics
#ADD best_new.pt /ultralytics
#
## Remove python3.11/EXTERNALLY-MANAGED or use 'pip install --break-system-packages' avoid 'externally-managed-environment' Ubuntu nightly error
## RUN rm -rf /usr/lib/python3.11/EXTERNALLY-MANAGED
#
## Install pip packages
#RUN python3 -m pip install --upgrade pip wheel
#RUN pip install --no-cache -e ".[export]" thop --extra-index-url https://download.pytorch.org/whl/cpu
#
## Run exports to AutoInstall packages
#RUN yolo export model=ultralytics/best_new.pt format=edgetpu imgsz=32
#RUN yolo export model=ultralytics/best_new.pt format=ncnn imgsz=32
## Requires <= Python 3.10, bug with paddlepaddle==2.5.0
#RUN pip install --no-cache paddlepaddle==2.4.2 x2paddle
## Remove exported models
#RUN rm -rf tmp



# Usage Examples -------------------------------------------------------------------------------------------------------

# Build and Push
# t=ultralytics/ultralytics:latest-python && sudo docker build -f docker/Dockerfile-python -t $t . && sudo docker push $t

# Run
# t=ultralytics/ultralytics:latest-python && sudo docker run -it --ipc=host $t

# Pull and Run with local volume mounted
# t=ultralytics/ultralytics:latest-python && sudo docker pull $t && sudo docker run -it --ipc=host -v "$(pwd)"/dataset:/usr/src/dataset $t

FROM pytorch/pytorch:2.0.1-cuda11.7-cudnn8-runtime
RUN pip install --no-cache nvidia-tensorrt --index-url https://pypi.ngc.nvidia.com

#YoloV8 based on Python3.8
RUN pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple

# Downloads to user config dir
ADD Arial.ttf Arial.Unicode.ttf /root/.config/Ultralytics/

#WorkDir
WORKDIR /ultralytics

# Copy contents
# COPY . /usr/src/app  (issues as not a .git directory)
RUN git clone https://github.com/ultralytics/ultralytics /ultralytics

#Requirements
ADD requirements_docker.txt /ultralytics
RUN pip install -r requirements_docker.txt -i https://pypi.tuna.tsinghua.edu.cn/simple

#make dir for models
RUN mkdir -p /ultralytics/models/
ADD best_new.pt /ultralytics/models/
ADD app_request.py /ultralytics/








